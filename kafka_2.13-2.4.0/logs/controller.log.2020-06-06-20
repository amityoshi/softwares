[2020-06-06 20:01:22,155] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-06 20:01:22,155] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-06 20:01:22,155] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-06-06 20:06:22,156] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-06 20:06:22,156] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-06 20:06:22,156] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-06-06 20:11:22,157] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-06 20:11:22,157] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-06 20:11:22,157] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-06-06 20:16:22,158] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-06 20:16:22,158] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-06 20:16:22,158] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-06-06 20:21:22,159] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-06 20:21:22,159] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-06 20:21:22,159] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-06-06 20:26:22,159] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-06 20:26:22,160] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-06 20:26:22,160] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-06-06 20:31:22,160] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-06 20:31:22,160] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-06 20:31:22,161] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-06-06 20:36:22,161] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-06 20:36:22,161] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-06 20:36:22,162] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-06-06 20:40:12,706] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4ca8195f, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-06 20:40:14,272] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-06-06 20:40:14,273] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-06-06 20:40:14,275] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-06-06 20:40:14,297] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2020-06-06 20:40:15,844] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-06 20:40:15,847] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-06 20:40:15,848] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-06 20:40:15,850] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-06-06 20:40:15,853] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-06 20:40:15,867] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:40:15,869] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:40:15,873] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-06 20:40:15,873] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-06 20:40:15,876] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-06 20:40:15,885] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-06-06 20:40:19,470] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-06 20:40:19,591] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-06-06 20:40:19,593] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-06-06 20:40:19,607] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-06 20:40:19,616] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-06 20:40:19,623] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-06-06 20:40:19,671] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 74) (kafka.controller.KafkaController)
[2020-06-06 20:40:19,680] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-06 20:40:19,694] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-06 20:40:19,742] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-06 20:40:19,745] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-06-06 20:40:19,746] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-06-06 20:40:19,747] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-06 20:40:19,748] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-06 20:40:19,755] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-06 20:40:19,756] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-06-06 20:40:19,757] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-06 20:40:19,760] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-06-06 20:40:19,761] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-06 20:40:19,784] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:40:19,787] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:40:19,816] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:40:19,818] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:40:19,819] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:40:19,821] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:40:19,823] INFO [RequestSendThread controllerId=0] Controller 0 connected to AmitY:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-06 20:40:19,832] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:40:19,834] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-06-06 20:40:19,850] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-06 20:40:19,852] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-06 20:40:19,853] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-06 20:40:19,854] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-06 20:40:19,857] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-06 20:40:19,932] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-06 20:40:24,935] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-06 20:40:24,936] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-06 20:40:24,939] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-06-06 20:43:16,676] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4ca8195f, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-06 20:43:46,876] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4ca8195f, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-06 20:43:47,979] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-06-06 20:43:47,981] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-06-06 20:43:47,983] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-06-06 20:43:47,993] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2020-06-06 20:43:49,348] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-06 20:43:49,351] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-06 20:43:49,351] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-06 20:43:49,352] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-06-06 20:43:49,354] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-06 20:43:49,359] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:43:49,361] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:43:49,364] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-06 20:43:49,365] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-06 20:43:49,365] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-06 20:43:49,376] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-06-06 20:43:53,119] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-06 20:43:53,247] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2020-06-06 20:43:53,248] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-06-06 20:43:53,259] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-06 20:43:53,271] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-06 20:43:53,291] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-06-06 20:43:53,336] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 138) (kafka.controller.KafkaController)
[2020-06-06 20:43:53,345] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-06 20:43:53,359] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-06 20:43:53,386] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-06 20:43:53,390] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-06-06 20:43:53,391] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-06-06 20:43:53,392] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-06 20:43:53,393] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-06 20:43:53,402] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-06 20:43:53,404] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-06-06 20:43:53,405] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-06 20:43:53,407] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-06-06 20:43:53,408] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-06 20:43:53,430] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:43:53,432] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:43:53,446] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:43:53,447] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:43:53,448] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:43:53,451] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:43:53,459] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:43:53,460] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2020-06-06 20:43:53,462] INFO [RequestSendThread controllerId=0] Controller 0 connected to AmitY:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-06 20:43:53,476] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-06 20:43:53,478] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-06 20:43:53,479] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-06 20:43:53,480] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-06 20:43:53,484] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-06 20:43:53,574] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-06 20:43:58,578] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-06 20:43:58,579] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-06 20:43:58,583] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-06-06 20:48:38,173] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4ca8195f, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-06 20:49:59,025] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4ca8195f, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-06 20:50:05,326] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-06 20:50:05,409] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2020-06-06 20:50:05,410] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-06-06 20:50:05,420] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-06 20:50:05,429] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-06 20:50:05,436] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-06-06 20:50:05,483] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 233) (kafka.controller.KafkaController)
[2020-06-06 20:50:05,492] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-06 20:50:05,510] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-06 20:50:05,550] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-06 20:50:05,553] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-06-06 20:50:05,555] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-06-06 20:50:05,555] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-06 20:50:05,556] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-06 20:50:05,564] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-06 20:50:05,566] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-06-06 20:50:05,567] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-06 20:50:05,569] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-06-06 20:50:05,571] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-06 20:50:05,598] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:50:05,602] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:50:05,628] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:50:05,630] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:50:05,632] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:50:05,632] INFO [RequestSendThread controllerId=0] Controller 0 connected to AmitY:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-06 20:50:05,634] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:50:05,645] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:50:05,646] INFO [Controller id=0] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2020-06-06 20:50:05,662] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-06 20:50:05,663] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-06 20:50:05,665] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-06 20:50:05,666] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-06 20:50:05,669] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-06 20:50:05,722] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-06 20:50:10,725] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-06 20:50:10,726] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-06 20:50:10,729] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-06-06 20:55:10,731] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-06 20:55:10,731] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-06 20:55:10,732] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
[2020-06-06 20:55:58,739] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4ca8195f, name=log4j:logger=kafka.controller (kafka.controller)
[2020-06-06 20:55:59,686] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-06-06 20:55:59,688] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-06-06 20:55:59,690] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-06-06 20:55:59,701] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2020-06-06 20:56:01,001] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-06 20:56:01,005] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-06 20:56:01,005] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-06 20:56:01,007] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-06-06 20:56:01,009] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-06 20:56:01,015] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:56:01,018] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:56:01,022] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-06-06 20:56:01,022] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-06-06 20:56:01,022] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-06-06 20:56:01,031] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-06-06 20:56:05,090] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-06-06 20:56:05,222] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2020-06-06 20:56:05,223] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-06-06 20:56:05,234] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-06-06 20:56:05,244] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-06-06 20:56:05,251] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-06-06 20:56:05,300] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 297) (kafka.controller.KafkaController)
[2020-06-06 20:56:05,313] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-06-06 20:56:05,332] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-06-06 20:56:05,371] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-06-06 20:56:05,375] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-06-06 20:56:05,376] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-06-06 20:56:05,378] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-06-06 20:56:05,379] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-06-06 20:56:05,387] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-06-06 20:56:05,389] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-06-06 20:56:05,390] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-06-06 20:56:05,392] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-06-06 20:56:05,394] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-06-06 20:56:05,420] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:56:05,423] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:56:05,447] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:56:05,448] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-06-06 20:56:05,450] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:56:05,452] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:56:05,454] INFO [RequestSendThread controllerId=0] Controller 0 connected to AmitY:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-06-06 20:56:05,461] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-06-06 20:56:05,462] INFO [Controller id=0] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2020-06-06 20:56:05,476] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-06-06 20:56:05,477] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-06-06 20:56:05,478] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-06-06 20:56:05,480] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-06-06 20:56:05,483] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-06-06 20:56:05,549] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-06-06 20:56:10,552] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-06-06 20:56:10,553] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-06-06 20:56:10,556] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.controller.KafkaController)
